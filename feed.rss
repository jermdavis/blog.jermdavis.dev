<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>Jeremy Davis - Sitecore, C# and web development</title>
		<link>https://blog.jermdavis.dev/</link>
		<description>Sitecore, C# and web development</description>
		<copyright>2014-2025</copyright>
		<managingEditor>Jeremy Davis</managingEditor>
		<pubDate>Wed, 09 Apr 2025 11:33:17 GMT</pubDate>
		<lastBuildDate>Wed, 09 Apr 2025 11:33:17 GMT</lastBuildDate>
		<item>
			<title>SUGCON EU Excitement!</title>
			<link>https://blog.jermdavis.dev/posts/2025/sugcon-excitement</link>
			<description>&lt;p&gt;There was a lot going on at &lt;a href="https://europe.sugcon.events/" target="_blank" rel="noopener"&gt;SUGCON EU in Antwerp&lt;/a&gt; last week. A lot of great community content, the usual fun bar/corridor conversations with other attendees, and plenty of (way too much?) food. But I want to single out some of the announcements Sitecore made in their keynotes and sessions, because there's some really important stuff there for our future work on the platform.&lt;/p&gt;</description>
			<author>Jeremy Davis</author>
			<enclosure url="https://blog.jermdavis.dev/" length="0" type="image" />
			<guid>https://blog.jermdavis.dev/posts/2025/sugcon-excitement</guid>
			<pubDate>Mon, 01 Jan 0001 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;There was a lot going on at &lt;a href="https://europe.sugcon.events/" target="_blank" rel="noopener"&gt;SUGCON EU in Antwerp&lt;/a&gt; last week. A lot of great community content, the usual fun bar/corridor conversations with other attendees, and plenty of (way too much?) food. But I want to single out some of the announcements Sitecore made in their keynotes and sessions, because there's some really important stuff there for our future work on the platform.&lt;/p&gt;</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Customising product data in Content Hub</title>
			<link>https://blog.jermdavis.dev/posts/2025/custom-product-data-content-hub</link>
			<description>&lt;p&gt;Content Hub is a product I don't get to use too often, so I find myself digging about a bit to remember the details of some customisation and setup. So having had to do some investigations into how to customise the Product Content Management features recently I figured both myself and search engines might benefit from some notes on the subject for the future. And maybe you will too...&lt;/p&gt;</description>
			<author>Jeremy Davis</author>
			<enclosure url="https://blog.jermdavis.dev/" length="0" type="image" />
			<guid>https://blog.jermdavis.dev/posts/2025/custom-product-data-content-hub</guid>
			<pubDate>Mon, 01 Jan 0001 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Content Hub is a product I don't get to use too often, so I find myself digging about a bit to remember the details of some customisation and setup. So having had to do some investigations into how to customise the Product Content Management features recently I figured both myself and search engines might benefit from some notes on the subject for the future. And maybe you will too...&lt;/p&gt;</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Memory issues might really be cache issues</title>
			<link>https://blog.jermdavis.dev/posts/2025/memory-issues-cache</link>
			<description>&lt;p&gt;I've written a few things about diagnosing memory issues in Sitecore over the years, but one topic I've not covered in detail is anything around &amp;quot;how to spot when it's not piles of your own objects that's causing the issue&amp;quot;. Problems like &lt;a href="https://blog.jermdavis.dev/posts/2024/event-memory-issues" target="_blank" rel="noopener"&gt;leaking handles&lt;/a&gt; can have an obvious link back to the custom code that you can spot fairly easily in diagnostic data. But not all memory issues do. I was discussing a possible example of this with a colleague recently, and it seemed like another thing to write down...&lt;/p&gt;</description>
			<author>Jeremy Davis</author>
			<enclosure url="https://blog.jermdavis.dev/" length="0" type="image" />
			<guid>https://blog.jermdavis.dev/posts/2025/memory-issues-cache</guid>
			<pubDate>Mon, 01 Jan 0001 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;I've written a few things about diagnosing memory issues in Sitecore over the years, but one topic I've not covered in detail is anything around &amp;quot;how to spot when it's not piles of your own objects that's causing the issue&amp;quot;. Problems like &lt;a href="https://blog.jermdavis.dev/posts/2024/event-memory-issues" target="_blank" rel="noopener"&gt;leaking handles&lt;/a&gt; can have an obvious link back to the custom code that you can spot fairly easily in diagnostic data. But not all memory issues do. I was discussing a possible example of this with a colleague recently, and it seemed like another thing to write down...&lt;/p&gt;</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Memory diagnostics for Sitecore under Docker</title>
			<link>https://blog.jermdavis.dev/posts/2025/memory-dump-docker-sitecore</link>
			<description>&lt;p&gt;When I was writing about &lt;a href="https://blog.jermdavis.dev/posts/2024/event-memory-issues" target="_blank" rel="noopener"&gt;dealing with memory analysis&lt;/a&gt; for Sitecore recently I focused on a site running under Auzre PaaS. But what if you're working in Docker locally? A good question it turns out...&lt;/p&gt;</description>
			<author>Jeremy Davis</author>
			<enclosure url="https://blog.jermdavis.dev/" length="0" type="image" />
			<guid>https://blog.jermdavis.dev/posts/2025/memory-dump-docker-sitecore</guid>
			<pubDate>Mon, 01 Jan 0001 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;When I was writing about &lt;a href="https://blog.jermdavis.dev/posts/2024/event-memory-issues" target="_blank" rel="noopener"&gt;dealing with memory analysis&lt;/a&gt; for Sitecore recently I focused on a site running under Auzre PaaS. But what if you're working in Docker locally? A good question it turns out...&lt;/p&gt;</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Oi Docker, where did my forms go?</title>
			<link>https://blog.jermdavis.dev/posts/2025/docker-where-did-the-forms-go</link>
			<description>&lt;p&gt;Recently I got a fun question from a fellow dev: After pulling some changes and doing a sync of serialised data they were expecting to see some forms in the Experience Forms editor so they could work on them. But nothing was showing up... The root cause here is a bit of a classic issue that many people will have seen before, but it still seemed worth writing it up. Even if just to emphasise that this has been around for a while and it's still a thing even if you're using containers.&lt;/p&gt;</description>
			<author>Jeremy Davis</author>
			<enclosure url="https://blog.jermdavis.dev/" length="0" type="image" />
			<guid>https://blog.jermdavis.dev/posts/2025/docker-where-did-the-forms-go</guid>
			<pubDate>Mon, 01 Jan 0001 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Recently I got a fun question from a fellow dev: After pulling some changes and doing a sync of serialised data they were expecting to see some forms in the Experience Forms editor so they could work on them. But nothing was showing up... The root cause here is a bit of a classic issue that many people will have seen before, but it still seemed worth writing it up. Even if just to emphasise that this has been around for a while and it's still a thing even if you're using containers.&lt;/p&gt;</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Reference counting for debugging resource leaks</title>
			<link>https://blog.jermdavis.dev/posts/2025/debugging-with-counters</link>
			<description>&lt;p&gt;I wrote about &lt;a href="https://blog.jermdavis.dev/posts/2024/event-memory-issues" target="_blank" rel="noopener"&gt;diagnosing some issues with static event bindings&lt;/a&gt; in a previous post, and talked about finding these issues of "subscribing more than you unsubscribe" with memory dumps. But finding this sort of a problem before it becomes an issue is better if you can, so what techniques might we use for that?&lt;/p&gt;</description>
			<author>Jeremy Davis</author>
			<enclosure url="https://blog.jermdavis.dev/" length="0" type="image" />
			<guid>https://blog.jermdavis.dev/posts/2025/debugging-with-counters</guid>
			<pubDate>Mon, 01 Jan 0001 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;I wrote about &lt;a href="https://blog.jermdavis.dev/posts/2024/event-memory-issues" target="_blank" rel="noopener"&gt;diagnosing some issues with static event bindings&lt;/a&gt; in a previous post, and talked about finding these issues of "subscribing more than you unsubscribe" with memory dumps. But finding this sort of a problem before it becomes an issue is better if you can, so what techniques might we use for that?&lt;/p&gt;</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>LINQPad is great!</title>
			<link>https://blog.jermdavis.dev/posts/2025/loving-linqpad</link>
			<description>&lt;p&gt;Over the festive break I spent a bit of time trying some of the challenges in this year's &lt;a href="https://adventofcode.com/2024" target="_blank" rel="noopener"&gt;Advent of Code&lt;/a&gt;. I wrote the logic for my answers using &lt;a href="https://www.linqpad.net/" target="_blank" rel="noopener"&gt;LINQPad&lt;/a&gt;, and it struck me that this has become one of my favourite developer tools. So here are a few of the reasons why it's become a key part of my toolkit, and why it might be a useful thing to add to yours too. &lt;/p&gt;</description>
			<author>Jeremy Davis</author>
			<enclosure url="https://blog.jermdavis.dev/" length="0" type="image" />
			<guid>https://blog.jermdavis.dev/posts/2025/loving-linqpad</guid>
			<pubDate>Mon, 01 Jan 0001 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Over the festive break I spent a bit of time trying some of the challenges in this year's &lt;a href="https://adventofcode.com/2024" target="_blank" rel="noopener"&gt;Advent of Code&lt;/a&gt;. I wrote the logic for my answers using &lt;a href="https://www.linqpad.net/" target="_blank" rel="noopener"&gt;LINQPad&lt;/a&gt;, and it struck me that this has become one of my favourite developer tools. So here are a few of the reasons why it's become a key part of my toolkit, and why it might be a useful thing to add to yours too. &lt;/p&gt;</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Integrating Ping Identity for public login</title>
			<link>https://blog.jermdavis.dev/posts/2024/integrating-ping</link>
			<description>&lt;p&gt;A while back I wrote a bit about how you might integrate &lt;a href="https://blog.jermdavis.dev/posts/2024/minimal-change-entra-sitecore" target="_blank" rel="noopener"&gt;Extra External ID with Sitecore&lt;/a&gt; to provide a very minimal IDAM integration for login. But in the follow-ups to the internal discussions that gave me the idea for that post, my project started talking about alternatives to Entra. So what might you be able to do if you chose &lt;a href="https://www.pingidentity.com/" target="_blank" rel="noopener"&gt;Ping Identity&lt;/a&gt; instead?&lt;/p&gt;</description>
			<author>Jeremy Davis</author>
			<enclosure url="https://blog.jermdavis.dev/" length="0" type="image" />
			<guid>https://blog.jermdavis.dev/posts/2024/integrating-ping</guid>
			<pubDate>Mon, 01 Jan 0001 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;A while back I wrote a bit about how you might integrate &lt;a href="https://blog.jermdavis.dev/posts/2024/minimal-change-entra-sitecore" target="_blank" rel="noopener"&gt;Extra External ID with Sitecore&lt;/a&gt; to provide a very minimal IDAM integration for login. But in the follow-ups to the internal discussions that gave me the idea for that post, my project started talking about alternatives to Entra. So what might you be able to do if you chose &lt;a href="https://www.pingidentity.com/" target="_blank" rel="noopener"&gt;Ping Identity&lt;/a&gt; instead?&lt;/p&gt;</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Watch out for Events in your Sitecore code</title>
			<link>https://blog.jermdavis.dev/posts/2024/event-memory-issues</link>
			<description>&lt;p&gt;After my recent delve into &lt;a href="https://blog.jermdavis.dev/posts/2024/optimising-allocations-for-performance" target="_blank" rel="noopener"&gt;memory optimisation for non-work code&lt;/a&gt;, I spent some time recently investigating a memory issue in a production Sitecore site. The outcome of that was an issue which can be a common problem for .Net code. So in the hope of seeing it less in the future, here are some notes on what I saw and how you can avoid the same trap...&lt;/p&gt;</description>
			<author>Jeremy Davis</author>
			<enclosure url="https://blog.jermdavis.dev/" length="0" type="image" />
			<guid>https://blog.jermdavis.dev/posts/2024/event-memory-issues</guid>
			<pubDate>Mon, 01 Jan 0001 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;After my recent delve into &lt;a href="https://blog.jermdavis.dev/posts/2024/optimising-allocations-for-performance" target="_blank" rel="noopener"&gt;memory optimisation for non-work code&lt;/a&gt;, I spent some time recently investigating a memory issue in a production Sitecore site. The outcome of that was an issue which can be a common problem for .Net code. So in the hope of seeing it less in the future, here are some notes on what I saw and how you can avoid the same trap...&lt;/p&gt;</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Optimising your allocations in .Net</title>
			<link>https://blog.jermdavis.dev/posts/2024/optimising-allocations-for-performance</link>
			<description>&lt;p&gt;I spend most of my working life building website code at work, and sometimes I get involved in performance work with that sort of system. In fact &lt;a href="https://blog.jermdavis.dev/posts/2017/measure-if-you-want-to-go-faster" target="_blank" rel="noopener"&gt;I've written and presented on that topic for Sitecore in the past&lt;/a&gt;. But some code I've been working on in my own time needs much more focus on code performance than that - the maths-heavy code for ray tracing. I've been looking at some optimisiations for that recently. And one thing that this has reinforced for me is how &amp;quot;easy to write&amp;quot; code can have some performance challenges...&lt;/p&gt;</description>
			<author>Jeremy Davis</author>
			<enclosure url="https://blog.jermdavis.dev/" length="0" type="image" />
			<guid>https://blog.jermdavis.dev/posts/2024/optimising-allocations-for-performance</guid>
			<pubDate>Mon, 01 Jan 0001 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;I spend most of my working life building website code at work, and sometimes I get involved in performance work with that sort of system. In fact &lt;a href="https://blog.jermdavis.dev/posts/2017/measure-if-you-want-to-go-faster" target="_blank" rel="noopener"&gt;I've written and presented on that topic for Sitecore in the past&lt;/a&gt;. But some code I've been working on in my own time needs much more focus on code performance than that - the maths-heavy code for ray tracing. I've been looking at some optimisiations for that recently. And one thing that this has reinforced for me is how &amp;quot;easy to write&amp;quot; code can have some performance challenges...&lt;/p&gt;</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
	</channel>
</rss>