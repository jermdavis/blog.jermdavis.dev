<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>https://blog.jermdavis.dev/</id>
	<title>Jeremy Davis - Sitecore, C# and web development</title>
	<author>
		<name>Jeremy Davis</name>
	</author>
	<link rel="self" href="https://blog.jermdavis.dev/" />
	<rights>2014-2025</rights>
	<updated>2025-08-25T07:09:16Z</updated>
	<subtitle>Sitecore, C# and web development</subtitle>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/radio-buttons-saas-forms</id>
		<title>Fun with Radio Buttons in Sitecore's SaaS forms</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/radio-buttons-saas-forms" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>2025-08-24T00:00:00Z</updated>
		<content>&lt;p&gt;I was doing some investigation into moving some Experience Forms UI over to the new SaaS Forms in XM Cloud recently, and bumped into an interesting issue. If you're looking to make use of this new tool you may find this an interesting read:&lt;/p&gt;</content>
		<summary>&lt;p&gt;I was doing some investigation into moving some Experience Forms UI over to the new SaaS Forms in XM Cloud recently, and bumped into an interesting issue. If you're looking to make use of this new tool you may find this an interesting read:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/disk-permissions-icacls</id>
		<title>Disk permissions with cloud AD</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/disk-permissions-icacls" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>2025-08-11T00:00:00Z</updated>
		<content>&lt;p&gt;A while back, work moved from having a traditional domain-joined laptops and an on-site Domain Controller for our Active Directory to the more modern SaaS model of cloud domain. Mostly this doesn't matter at all to employees as they work. But I bumped into one place where I do need to do something different because of this: setting explict disk permissions. So as a reminder to myself for next time, here's how to achieve this.&lt;/p&gt;</content>
		<summary>&lt;p&gt;A while back, work moved from having a traditional domain-joined laptops and an on-site Domain Controller for our Active Directory to the more modern SaaS model of cloud domain. Mostly this doesn't matter at all to employees as they work. But I bumped into one place where I do need to do something different because of this: setting explict disk permissions. So as a reminder to myself for next time, here's how to achieve this.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/mistake-satiq-pipelines</id>
		<title>A mistake to avoid with Statiq's pipelines</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/mistake-satiq-pipelines" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>2025-07-28T00:00:00Z</updated>
		<content>&lt;p&gt;I've been tinkering with some pipeline modules for the Statiq generation engine that I use to render this blog, and I bumped into a fun mistake in my code which confused me for a while. To help me next time I'm doing this sort of modification, this seemed worth documenting - even if it is a bit of a silly mistake...&lt;/p&gt;</content>
		<summary>&lt;p&gt;I've been tinkering with some pipeline modules for the Statiq generation engine that I use to render this blog, and I bumped into a fun mistake in my code which confused me for a while. To help me next time I'm doing this sort of modification, this seemed worth documenting - even if it is a bit of a silly mistake...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/order-and-scs</id>
		<title>Order and Sitecore Content Serialisation</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/order-and-scs" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>2025-07-14T00:00:00Z</updated>
		<content>&lt;p&gt;A common but not-fun issue for working developers is when you do some work, test it locally, submit a PR and then find that it blows up on someone else's computer. I'm not too proud to admit that I had an issue with this recently, which highlights a thing you have to remember when working with &lt;a href="https://doc.sitecore.com/xp/en/developers/latest/developer-tools/sitecore-content-serialization.html" target="_blank" rel="noopener"&gt;Sitecore Content Serialisation&lt;/a&gt;.&lt;/p&gt;</content>
		<summary>&lt;p&gt;A common but not-fun issue for working developers is when you do some work, test it locally, submit a PR and then find that it blows up on someone else's computer. I'm not too proud to admit that I had an issue with this recently, which highlights a thing you have to remember when working with &lt;a href="https://doc.sitecore.com/xp/en/developers/latest/developer-tools/sitecore-content-serialization.html" target="_blank" rel="noopener"&gt;Sitecore Content Serialisation&lt;/a&gt;.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/quirk-explicit-interfaces</id>
		<title>A quirk of explicit interfaces</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/quirk-explicit-interfaces" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>2025-06-30T00:00:00Z</updated>
		<content>&lt;p&gt;One of the fun things about defining objects and their APIs in C# is thinking about which bits you want your consumers to see, and which bits need to be there just for you, and consumers should avoid using. Most developers are aware of keywords like &lt;code&gt;public&lt;/code&gt; / &lt;code&gt;private&lt;/code&gt; and &lt;code&gt;internal&lt;/code&gt; for achieving this, but Explicit Interfaces are another approach to this...&lt;/p&gt;</content>
		<summary>&lt;p&gt;One of the fun things about defining objects and their APIs in C# is thinking about which bits you want your consumers to see, and which bits need to be there just for you, and consumers should avoid using. Most developers are aware of keywords like &lt;code&gt;public&lt;/code&gt; / &lt;code&gt;private&lt;/code&gt; and &lt;code&gt;internal&lt;/code&gt; for achieving this, but Explicit Interfaces are another approach to this...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/fix-install-sitecore-102-win11</id>
		<title>Automating a fix for Sitecore 10.2 SIF / SIA installs on Windows 11</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/fix-install-sitecore-102-win11" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>2025-06-16T00:00:00Z</updated>
		<content>&lt;p&gt;An issue that crops up fairly often in web agency work is that you have to work on code for older versions of Sitecore. Most of the time this is fine, but sometimes in between the Sitecore version getting released and you doing this work, stuff changes in Windows that makes this setup harder than it should be... This has been a challenge recently as some of my fellow developers now have Windows 11 on their laptops, and they're having to work on Sitecore 10.2 projects. And out of the box, &lt;a href="https://developers.sitecore.com/downloads/Sitecore_Installation_Framework" target="_blank" rel="noopener"&gt;SIF&lt;/a&gt; or SIA won't install in that scenario these days. Having had to help a couple of people with these issues recently, I figured it might be worth automating the fixes with some Powershell, so it's easier in the future. And maybe that automation might help you?&lt;/p&gt;</content>
		<summary>&lt;p&gt;An issue that crops up fairly often in web agency work is that you have to work on code for older versions of Sitecore. Most of the time this is fine, but sometimes in between the Sitecore version getting released and you doing this work, stuff changes in Windows that makes this setup harder than it should be... This has been a challenge recently as some of my fellow developers now have Windows 11 on their laptops, and they're having to work on Sitecore 10.2 projects. And out of the box, &lt;a href="https://developers.sitecore.com/downloads/Sitecore_Installation_Framework" target="_blank" rel="noopener"&gt;SIF&lt;/a&gt; or SIA won't install in that scenario these days. Having had to help a couple of people with these issues recently, I figured it might be worth automating the fixes with some Powershell, so it's easier in the future. And maybe that automation might help you?&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/posting-images-bluesky</id>
		<title>Posting images to BlueSky</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/posting-images-bluesky" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>2025-06-02T00:00:00Z</updated>
		<content>&lt;p&gt;I was tinkering with some some code that could post to &lt;a href="https://bsky.app/" target="_blank" rel="noopener"&gt;BlueSky&lt;/a&gt; recently, and it took me a couple of goes to make the process of submitting a message with an image work. So in case it's of any use to anyone else, here's one way it can work:&lt;/p&gt;</content>
		<summary>&lt;p&gt;I was tinkering with some some code that could post to &lt;a href="https://bsky.app/" target="_blank" rel="noopener"&gt;BlueSky&lt;/a&gt; recently, and it took me a couple of goes to make the process of submitting a message with an image work. So in case it's of any use to anyone else, here's one way it can work:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/it-was-csharp-itself</id>
		<title>For once, it is a bug in C#!</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/it-was-csharp-itself" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>2025-05-19T00:00:00Z</updated>
		<content>&lt;p&gt;Having been in development for a long time I've come across a lot of headscratching odd behaviour in code. Those issus have lead to a fair few conversations where people have looked at the odd behaviour and asked &amp;quot;is it a compiler/runtime bug?&amp;quot;. And in all these years it never has been that sort of bug. But for the first time I have recently found a situation where some odd behaviour is C#'s fault...&lt;/p&gt;
&lt;p&gt;So here's some info about the issue I saw this time, and what Microsoft are fixing as a result:&lt;/p&gt;</content>
		<summary>&lt;p&gt;Having been in development for a long time I've come across a lot of headscratching odd behaviour in code. Those issus have lead to a fair few conversations where people have looked at the odd behaviour and asked &amp;quot;is it a compiler/runtime bug?&amp;quot;. And in all these years it never has been that sort of bug. But for the first time I have recently found a situation where some odd behaviour is C#'s fault...&lt;/p&gt;
&lt;p&gt;So here's some info about the issue I saw this time, and what Microsoft are fixing as a result:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/trick-powerpoint-designer</id>
		<title>A trick for working with PowerPoint's Designer</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/trick-powerpoint-designer" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>2025-05-05T00:00:00Z</updated>
		<content>&lt;p&gt;The other day I was working on some slides for a user group presentation when I hit an issue. PowerPoint's &amp;quot;random slide design&amp;quot; tool had thrown up a style I liked and wanted to reuse. But there were things it added to the slide I could not select. And hence I couldn't see a way to copy them so different slide types could share the same look. It took me a while to work out how to sort this, so it needs writing down so I can remember for next time...&lt;/p&gt;</content>
		<summary>&lt;p&gt;The other day I was working on some slides for a user group presentation when I hit an issue. PowerPoint's &amp;quot;random slide design&amp;quot; tool had thrown up a style I liked and wanted to reuse. But there were things it added to the slide I could not select. And hence I couldn't see a way to copy them so different slide types could share the same look. It took me a while to work out how to sort this, so it needs writing down so I can remember for next time...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/query-custom-products-images-content-hub</id>
		<title>Querying product data and images in Content Hub</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/query-custom-products-images-content-hub" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>2025-04-20T00:00:00Z</updated>
		<content>&lt;p&gt;In a previous post I looked at how you can customise schema for Products in the Product Content Management feature of Content Hub. But getting data in is only half the story - how can we go about getting it back out for use elsewhere in our tech ecosystem? Well the answer is a fun combination of GraphQL and how Content Hub can serve images. Read on for my notes on one approach on configuring all of this: &lt;/p&gt;</content>
		<summary>&lt;p&gt;In a previous post I looked at how you can customise schema for Products in the Product Content Management feature of Content Hub. But getting data in is only half the story - how can we go about getting it back out for use elsewhere in our tech ecosystem? Well the answer is a fun combination of GraphQL and how Content Hub can serve images. Read on for my notes on one approach on configuring all of this: &lt;/p&gt;</summary>
	</entry>
</feed>