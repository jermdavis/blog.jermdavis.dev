<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>https://blog.jermdavis.dev/</id>
	<title>Jeremy Davis - Sitecore, C# and web development</title>
	<author>
		<name>Jeremy Davis</name>
	</author>
	<link rel="self" href="https://blog.jermdavis.dev/" />
	<rights>2014-2024</rights>
	<updated>2024-03-01T22:10:40Z</updated>
	<subtitle>Sitecore, C# and web development</subtitle>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2024/sql-containers-contained-auth</id>
		<title>Confusing myself with Sitecore's database authentication</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2024/sql-containers-contained-auth" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;Sometimes things you think you know turn out not to be right. I got bitten by this issue recently, and it seemed like something to write down. Because being wrong is fine, as long as you learn something...&lt;/p&gt;</content>
		<summary>&lt;p&gt;Sometimes things you think you know turn out not to be right. I got bitten by this issue recently, and it seemed like something to write down. Because being wrong is fine, as long as you learn something...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2024/not-following-the-rules</id>
		<title>When not to follow 'the rules'...</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2024/not-following-the-rules" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;There are certain &amp;quot;rules of programming&amp;quot; that I keep hearing about in my career. One that came up in an interesting work debate recently was &amp;quot;you should never use regular expressions to parse HTML&amp;quot;. Don't get me wrong - there can be a lot of useful knowledge wrapped up in these rules, but should we &lt;em&gt;always&lt;/em&gt; follow them to the letter? I think it's an interesting question...&lt;/p&gt;</content>
		<summary>&lt;p&gt;There are certain &amp;quot;rules of programming&amp;quot; that I keep hearing about in my career. One that came up in an interesting work debate recently was &amp;quot;you should never use regular expressions to parse HTML&amp;quot;. Don't get me wrong - there can be a lot of useful knowledge wrapped up in these rules, but should we &lt;em&gt;always&lt;/em&gt; follow them to the letter? I think it's an interesting question...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2024/azure-front-door-redirect-loop</id>
		<title>A fun gotcha with Azure Front Door Premium</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2024/azure-front-door-redirect-loop" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;I bumped into an interesting redirect-loop issue with a Sitecore instance sitting behind Azure Front Door recently. It's not a product I know a great deal about, so this seemed worth writing down in case I come across it again, or others bump into the same challenge. Turns out it wasn't a Sitecore-specific issue, but its definitely something which could affect other Sitecore sites...&lt;/p&gt;</content>
		<summary>&lt;p&gt;I bumped into an interesting redirect-loop issue with a Sitecore instance sitting behind Azure Front Door recently. It's not a product I know a great deal about, so this seemed worth writing down in case I come across it again, or others bump into the same challenge. Turns out it wasn't a Sitecore-specific issue, but its definitely something which could affect other Sitecore sites...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2024/xm-cloud-futures</id>
		<title>XM Cloud: We're on a journey</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2024/xm-cloud-futures" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;There was a lot of interesting discussion at SUGCON NA and the MVP Summit towards the back-end of last year. I've got piles of notes I took about stuff that caught my attention over the course of those events. But out of all the sessions, one specific thing stuck out to me as a vision of our future as Sitecore developers. And it's a topic that's come up a few times in my conversations with people at work and in the general community. So it seemed like it was worth writing about...&lt;/p&gt;</content>
		<summary>&lt;p&gt;There was a lot of interesting discussion at SUGCON NA and the MVP Summit towards the back-end of last year. I've got piles of notes I took about stuff that caught my attention over the course of those events. But out of all the sessions, one specific thing stuck out to me as a vision of our future as Sitecore developers. And it's a topic that's come up a few times in my conversations with people at work and in the general community. So it seemed like it was worth writing about...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2023/reading-time-estimates-statiq</id>
		<title>Adding reading time estimates to blog posts</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2023/reading-time-estimates-statiq" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;The second idea on my &amp;quot;little things I'd meant to add to this blog for a while&amp;quot; list was reading time estimates. Like &lt;a href="" target="_blank" rel="noopener"&gt;the reading progress indicator from before&lt;/a&gt;, this shouldn't be tricky, and in this case I wanted to write it down in case anyone else working with &lt;a href="https://www.statiq.dev/" target="_blank" rel="noopener"&gt;Statiq&lt;/a&gt; was interested in achieving something similar on their site.&lt;/p&gt;</content>
		<summary>&lt;p&gt;The second idea on my &amp;quot;little things I'd meant to add to this blog for a while&amp;quot; list was reading time estimates. Like &lt;a href="" target="_blank" rel="noopener"&gt;the reading progress indicator from before&lt;/a&gt;, this shouldn't be tricky, and in this case I wanted to write it down in case anyone else working with &lt;a href="https://www.statiq.dev/" target="_blank" rel="noopener"&gt;Statiq&lt;/a&gt; was interested in achieving something similar on their site.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2023/adding-reading-progress-indicator</id>
		<title>Adding a reading-progress bar to blog posts</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2023/adding-reading-progress-indicator" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;I'd had the idea that I should add a &amp;quot;reading progress&amp;quot; indicator to my blog posts for a while now, and I finally got around to adding it the other weekend. What I'd assumed would be a five minute job had an interesting issue I thought I should document for others...&lt;/p&gt;</content>
		<summary>&lt;p&gt;I'd had the idea that I should add a &amp;quot;reading progress&amp;quot; indicator to my blog posts for a while now, and I finally got around to adding it the other weekend. What I'd assumed would be a five minute job had an interesting issue I thought I should document for others...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2023/driving-browsers-3-states</id>
		<title>Driving browsers: #3 The states</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2023/driving-browsers-3-states" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;Time for the final part of my series on controlling a web browser. With code to load a browser, and the overarching State Machine to control it, this part finishes off with the code for some states to load a page and extract its markup. Plus a few conclusions...&lt;/p&gt;</content>
		<summary>&lt;p&gt;Time for the final part of my series on controlling a web browser. With code to load a browser, and the overarching State Machine to control it, this part finishes off with the code for some states to load a page and extract its markup. Plus a few conclusions...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2023/driving-browsers-2-statemachine</id>
		<title>Driving browsers: #2 The state machine</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2023/driving-browsers-2-statemachine" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;Continuing from &lt;a href="https://blog.jermdavis.dev/posts/2023/driving-browsers-1-browser" target="_blank" rel="noopener"&gt;my previous post&lt;/a&gt; about firing up a browser in order to automate it, this post moves on to the overall pattern for how the browser can be controlled.&lt;/p&gt;</content>
		<summary>&lt;p&gt;Continuing from &lt;a href="https://blog.jermdavis.dev/posts/2023/driving-browsers-1-browser" target="_blank" rel="noopener"&gt;my previous post&lt;/a&gt; about firing up a browser in order to automate it, this post moves on to the overall pattern for how the browser can be controlled.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2023/driving-browsers-1-browser</id>
		<title>Driving browsers: #1 The Browser</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2023/driving-browsers-1-browser" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;I bumped into an issue recently where I needed to write some code to scrape a bit of HTML. The usual .Net approach of using an &lt;code&gt;HttpClient&lt;/code&gt; didn't work here - the web site in question made use of some client-side JavaScript to generate mark-up at runtime. So I needed a different approach to fetch the resulting HTML. A while back I'd written some code to &lt;a href="https://blog.jermdavis.dev/posts/2023/rendering-tweets" target="_blank" rel="noopener"&gt;grab images of rendered HTML using the Chromium DevTools APIs&lt;/a&gt;, and I figured I could play a similar game here...&lt;/p&gt;</content>
		<summary>&lt;p&gt;I bumped into an issue recently where I needed to write some code to scrape a bit of HTML. The usual .Net approach of using an &lt;code&gt;HttpClient&lt;/code&gt; didn't work here - the web site in question made use of some client-side JavaScript to generate mark-up at runtime. So I needed a different approach to fetch the resulting HTML. A while back I'd written some code to &lt;a href="https://blog.jermdavis.dev/posts/2023/rendering-tweets" target="_blank" rel="noopener"&gt;grab images of rendered HTML using the Chromium DevTools APIs&lt;/a&gt;, and I figured I could play a similar game here...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2023/rule-based-config-issue</id>
		<title>Tripped up by boolean values in Rule-Based Config</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2023/rule-based-config-issue" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;I wasted a few hours recently when I did something which seemed entirely reasonable with Rule-Based Config in Sitecore and it did not work the way I thought it would. Here's an explanation of what I did and what happened as a result, so you can avoid making the same mistake as me... &lt;/p&gt;</content>
		<summary>&lt;p&gt;I wasted a few hours recently when I did something which seemed entirely reasonable with Rule-Based Config in Sitecore and it did not work the way I thought it would. Here's an explanation of what I did and what happened as a result, so you can avoid making the same mistake as me... &lt;/p&gt;</summary>
	</entry>
</feed>