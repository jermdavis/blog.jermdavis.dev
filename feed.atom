<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>https://blog.jermdavis.dev/</id>
	<title>Jeremy Davis - Sitecore, C# and web development</title>
	<author>
		<name>Jeremy Davis</name>
	</author>
	<link rel="self" href="https://blog.jermdavis.dev/" />
	<rights>2014-2025</rights>
	<updated>2025-02-24T07:56:13Z</updated>
	<subtitle>Sitecore, C# and web development</subtitle>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/memory-dump-docker-sitecore</id>
		<title>Memory diagnostics for Docker in containers</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/memory-dump-docker-sitecore" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;When I was writing about &lt;a href="https://blog.jermdavis.dev/posts/2024/event-memory-issues" target="_blank" rel="noopener"&gt;dealing with memory analysis&lt;/a&gt; for Sitecore recently I focused on a site running under Auzre PaaS. But what if you're working in Docker locally? A good question it turns out...&lt;/p&gt;</content>
		<summary>&lt;p&gt;When I was writing about &lt;a href="https://blog.jermdavis.dev/posts/2024/event-memory-issues" target="_blank" rel="noopener"&gt;dealing with memory analysis&lt;/a&gt; for Sitecore recently I focused on a site running under Auzre PaaS. But what if you're working in Docker locally? A good question it turns out...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/docker-where-did-the-forms-go</id>
		<title>Oi Docker, where did my forms go?</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/docker-where-did-the-forms-go" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;Recently I got a fun question from a fellow dev: After pulling some changes and doing a sync of serialised data they were expecting to see some forms in the Experience Forms editor so they could work on them. But nothing was showing up... The root cause here is a bit of a classic issue that many people will have seen before, but it still seemed worth writing it up. Even if just to emphasise that this has been around for a while and it's still a thing even if you're using containers.&lt;/p&gt;</content>
		<summary>&lt;p&gt;Recently I got a fun question from a fellow dev: After pulling some changes and doing a sync of serialised data they were expecting to see some forms in the Experience Forms editor so they could work on them. But nothing was showing up... The root cause here is a bit of a classic issue that many people will have seen before, but it still seemed worth writing it up. Even if just to emphasise that this has been around for a while and it's still a thing even if you're using containers.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/debugging-with-counters</id>
		<title>Reference counting for debugging resource leaks</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/debugging-with-counters" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;I wrote about &lt;a href="https://blog.jermdavis.dev/posts/2024/event-memory-issues" target="_blank" rel="noopener"&gt;diagnosing some issues with static event bindings&lt;/a&gt; in a previous post, and talked about finding these issues of "subscribing more than you unsubscribe" with memory dumps. But finding this sort of a problem before it becomes an issue is better if you can, so what techniques might we use for that?&lt;/p&gt;</content>
		<summary>&lt;p&gt;I wrote about &lt;a href="https://blog.jermdavis.dev/posts/2024/event-memory-issues" target="_blank" rel="noopener"&gt;diagnosing some issues with static event bindings&lt;/a&gt; in a previous post, and talked about finding these issues of "subscribing more than you unsubscribe" with memory dumps. But finding this sort of a problem before it becomes an issue is better if you can, so what techniques might we use for that?&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2025/loving-linqpad</id>
		<title>LINQPad is great!</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2025/loving-linqpad" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;Over the festive break I spent a bit of time trying some of the challenges in this year's &lt;a href="https://adventofcode.com/2024" target="_blank" rel="noopener"&gt;Advent of Code&lt;/a&gt;. I wrote the logic for my answers using &lt;a href="https://www.linqpad.net/" target="_blank" rel="noopener"&gt;LINQPad&lt;/a&gt;, and it struck me that this has become one of my favourite developer tools. So here are a few of the reasons why it's become a key part of my toolkit, and why it might be a useful thing to add to yours too. &lt;/p&gt;</content>
		<summary>&lt;p&gt;Over the festive break I spent a bit of time trying some of the challenges in this year's &lt;a href="https://adventofcode.com/2024" target="_blank" rel="noopener"&gt;Advent of Code&lt;/a&gt;. I wrote the logic for my answers using &lt;a href="https://www.linqpad.net/" target="_blank" rel="noopener"&gt;LINQPad&lt;/a&gt;, and it struck me that this has become one of my favourite developer tools. So here are a few of the reasons why it's become a key part of my toolkit, and why it might be a useful thing to add to yours too. &lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2024/integrating-ping</id>
		<title>Integrating Ping Identity for public login</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2024/integrating-ping" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;A while back I wrote a bit about how you might integrate &lt;a href="https://blog.jermdavis.dev/posts/2024/minimal-change-entra-sitecore" target="_blank" rel="noopener"&gt;Extra External ID with Sitecore&lt;/a&gt; to provide a very minimal IDAM integration for login. But in the follow-ups to the internal discussions that gave me the idea for that post, my project started talking about alternatives to Entra. So what might you be able to do if you chose &lt;a href="https://www.pingidentity.com/" target="_blank" rel="noopener"&gt;Ping Identity&lt;/a&gt; instead?&lt;/p&gt;</content>
		<summary>&lt;p&gt;A while back I wrote a bit about how you might integrate &lt;a href="https://blog.jermdavis.dev/posts/2024/minimal-change-entra-sitecore" target="_blank" rel="noopener"&gt;Extra External ID with Sitecore&lt;/a&gt; to provide a very minimal IDAM integration for login. But in the follow-ups to the internal discussions that gave me the idea for that post, my project started talking about alternatives to Entra. So what might you be able to do if you chose &lt;a href="https://www.pingidentity.com/" target="_blank" rel="noopener"&gt;Ping Identity&lt;/a&gt; instead?&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2024/event-memory-issues</id>
		<title>Watch out for Events in your Sitecore code</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2024/event-memory-issues" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;After my recent delve into &lt;a href="https://blog.jermdavis.dev/posts/2024/optimising-allocations-for-performance" target="_blank" rel="noopener"&gt;memory optimisation for non-work code&lt;/a&gt;, I spent some time recently investigating a memory issue in a production Sitecore site. The outcome of that was an issue which can be a common problem for .Net code. So in the hope of seeing it less in the future, here are some notes on what I saw and how you can avoid the same trap...&lt;/p&gt;</content>
		<summary>&lt;p&gt;After my recent delve into &lt;a href="https://blog.jermdavis.dev/posts/2024/optimising-allocations-for-performance" target="_blank" rel="noopener"&gt;memory optimisation for non-work code&lt;/a&gt;, I spent some time recently investigating a memory issue in a production Sitecore site. The outcome of that was an issue which can be a common problem for .Net code. So in the hope of seeing it less in the future, here are some notes on what I saw and how you can avoid the same trap...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2024/optimising-allocations-for-performance</id>
		<title>Optimising your allocations in .Net</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2024/optimising-allocations-for-performance" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;I spend most of my working life building website code at work, and sometimes I get involved in performance work with that sort of system. In fact &lt;a href="https://blog.jermdavis.dev/posts/2017/measure-if-you-want-to-go-faster" target="_blank" rel="noopener"&gt;I've written and presented on that topic for Sitecore in the past&lt;/a&gt;. But some code I've been working on in my own time needs much more focus on code performance than that - the maths-heavy code for ray tracing. I've been looking at some optimisiations for that recently. And one thing that this has reinforced for me is how &amp;quot;easy to write&amp;quot; code can have some performance challenges...&lt;/p&gt;</content>
		<summary>&lt;p&gt;I spend most of my working life building website code at work, and sometimes I get involved in performance work with that sort of system. In fact &lt;a href="https://blog.jermdavis.dev/posts/2017/measure-if-you-want-to-go-faster" target="_blank" rel="noopener"&gt;I've written and presented on that topic for Sitecore in the past&lt;/a&gt;. But some code I've been working on in my own time needs much more focus on code performance than that - the maths-heavy code for ray tracing. I've been looking at some optimisiations for that recently. And one thing that this has reinforced for me is how &amp;quot;easy to write&amp;quot; code can have some performance challenges...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2024/extracting-article-headings</id>
		<title>Extracting blog article headings for navigation</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2024/extracting-article-headings" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;I've  wanted to add some logic to this site to display article headings as navigation for a while. And I've also been thinking it would be helpful if you were able to link directly to headings. Pleasingly the Statiq engine makes doing this pretty simple, so here's how my attempt works:&lt;/p&gt;</content>
		<summary>&lt;p&gt;I've  wanted to add some logic to this site to display article headings as navigation for a while. And I've also been thinking it would be helpful if you were able to link directly to headings. Pleasingly the Statiq engine makes doing this pretty simple, so here's how my attempt works:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2024/post-symposium-wrap-up</id>
		<title>My post-Symposium wrap up</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2024/post-symposium-wrap-up" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;Symposium is over for another year. I have &lt;em&gt;mostly&lt;/em&gt; recovered from the jet-lag now and I've wrestled my inbox into submission at work. So it's time to write up my thoughts on the conference. I took about 35 pages of notes over the course of the week, plus countless photos of slides. So from all that what stuck out as interesting to me?&lt;/p&gt;</content>
		<summary>&lt;p&gt;Symposium is over for another year. I have &lt;em&gt;mostly&lt;/em&gt; recovered from the jet-lag now and I've wrestled my inbox into submission at work. So it's time to write up my thoughts on the conference. I took about 35 pages of notes over the course of the week, plus countless photos of slides. So from all that what stuck out as interesting to me?&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2024/minimal-change-entra-sitecore</id>
		<title>What's the 'minimal change' to use Entra External ID for public login with Sitecore?</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2024/minimal-change-entra-sitecore" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;I did a little proof-of-concept hacking recently around the idea of &amp;quot;what's the least work required to allow your existing Sitecore website public login to move to Entra&amp;quot;. I ended up with the bones of an interesting approach, which might be of interest to others. So read on for ideas:&lt;/p&gt;</content>
		<summary>&lt;p&gt;I did a little proof-of-concept hacking recently around the idea of &amp;quot;what's the least work required to allow your existing Sitecore website public login to move to Entra&amp;quot;. I ended up with the bones of an interesting approach, which might be of interest to others. So read on for ideas:&lt;/p&gt;</summary>
	</entry>
</feed>