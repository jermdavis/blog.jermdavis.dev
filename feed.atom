<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>https://blog.jermdavis.dev/</id>
	<title>Jeremy Davis - Sitecore, C# and web development</title>
	<author>
		<name>Jeremy Davis</name>
	</author>
	<link rel="self" href="https://blog.jermdavis.dev/" />
	<rights>2014-2023</rights>
	<updated>2023-03-28T09:33:32Z</updated>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2023/rendering-tweets</id>
		<title>Getting tweets (and toots) as images for my blog</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2023/rendering-tweets" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;Since the whole &amp;quot;Twitter's in something of a downward spiral&amp;quot; thing kicked off, I'd been musing over the idea that having embedded tweets in my blog might not be such a good thing long term. What happens if the mad billionaire at the helm suddenly decides that embedding tweets should be a paid feature, or the site has a long outage? The best alternative I had was to turn the tweets into images - so obviously I investigated how I could automate this. Turns out it was a fun feature to add to my blog editor...&lt;/p&gt;</content>
		<summary>&lt;p&gt;Since the whole &amp;quot;Twitter's in something of a downward spiral&amp;quot; thing kicked off, I'd been musing over the idea that having embedded tweets in my blog might not be such a good thing long term. What happens if the mad billionaire at the helm suddenly decides that embedding tweets should be a paid feature, or the site has a long outage? The best alternative I had was to turn the tweets into images - so obviously I investigated how I could automate this. Turns out it was a fun feature to add to my blog editor...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2023/workaround-solr-docker-issue</id>
		<title>A fix for Sitecore's developer SolrCloud containers failing to find ZooKeeper</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2023/workaround-solr-docker-issue" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;A while back &lt;a href="https://blog.jermdavis.dev/posts/2022/docker-zookeeper-solr-fail" target="_blank" rel="noopener"&gt;I wrote up some notes on a problem some people were seeing with Sitecore's SolrCloud developer container&lt;/a&gt; that I'd been unable to fix. It was the worst sort of technical problem, happening irregularly on some computers, but never rearing its head on others. So it's taken me a while to get around to coming up with a fix for this. But if you've suffered from the problems described in my previous post, this is an option for you:&lt;/p&gt;</content>
		<summary>&lt;p&gt;A while back &lt;a href="https://blog.jermdavis.dev/posts/2022/docker-zookeeper-solr-fail" target="_blank" rel="noopener"&gt;I wrote up some notes on a problem some people were seeing with Sitecore's SolrCloud developer container&lt;/a&gt; that I'd been unable to fix. It was the worst sort of technical problem, happening irregularly on some computers, but never rearing its head on others. So it's taken me a while to get around to coming up with a fix for this. But if you've suffered from the problems described in my previous post, this is an option for you:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2023/future-sitecore-connect</id>
		<title>A glimpse of the future for Sitecore Connect</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2023/future-sitecore-connect" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;One of the interesting announcements from &lt;a href="https://blog.jermdavis.dev/posts/2022/symposium-2022#connectivity-between-composable-tools-sitecore-connect" target="_blank" rel="noopener"&gt;last year's Symposium&lt;/a&gt; was Sitecore's approach to how we might join up our composable applications. They announced that they were working on "Sitecore Connect" at this event, but didn't really get into detail of what it would be outside of "we're re-badging Workato". So what is that, and what does it suggest we might get out of Connect in the future? Read on, for an attempt at working that out...&lt;/p&gt;</content>
		<summary>&lt;p&gt;One of the interesting announcements from &lt;a href="https://blog.jermdavis.dev/posts/2022/symposium-2022#connectivity-between-composable-tools-sitecore-connect" target="_blank" rel="noopener"&gt;last year's Symposium&lt;/a&gt; was Sitecore's approach to how we might join up our composable applications. They announced that they were working on "Sitecore Connect" at this event, but didn't really get into detail of what it would be outside of "we're re-badging Workato". So what is that, and what does it suggest we might get out of Connect in the future? Read on, for an attempt at working that out...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2023/inheritance-bug-static-methods</id>
		<title>How to waste a day on an inheritance bug</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2023/inheritance-bug-static-methods" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;I've been migrating a big chunk of .Net 4 code to .Net 7 recently. One of the few large changes I had to make was to replace some boilerplate generation that used T4 Templates with a Source Generator. (As T4 isn't entirely supported in latest .Net) But these work very differently, so that change involved a good chunk of work. But I messed this up in a way that caused a subtle bug. And while I may well get to writing about Source Generators later, that silly bug is also worth writing up. Even if it's just to remind me not to make the same mistake in the future...&lt;/p&gt;</content>
		<summary>&lt;p&gt;I've been migrating a big chunk of .Net 4 code to .Net 7 recently. One of the few large changes I had to make was to replace some boilerplate generation that used T4 Templates with a Source Generator. (As T4 isn't entirely supported in latest .Net) But these work very differently, so that change involved a good chunk of work. But I messed this up in a way that caused a subtle bug. And while I may well get to writing about Source Generators later, that silly bug is also worth writing up. Even if it's just to remind me not to make the same mistake in the future...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2023/track-changes-rich-text</id>
		<title>Tracking content changes for Rich Text</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2023/track-changes-rich-text" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;A requirement which comes up every so often is that external systems need to know about changes to content that lives in Sitecore. As with most technical problems, there are a variety of ways that you can solve a problem like this, and they all have different pros and cons. One of my colleagues has been working on a project like this recently, and the approach required there meant we bumped up against an interesting configuration challenge. If you're writing code that monitors content changes you might need to think about this:&lt;/p&gt;</content>
		<summary>&lt;p&gt;A requirement which comes up every so often is that external systems need to know about changes to content that lives in Sitecore. As with most technical problems, there are a variety of ways that you can solve a problem like this, and they all have different pros and cons. One of my colleagues has been working on a project like this recently, and the approach required there meant we bumped up against an interesting configuration challenge. If you're writing code that monitors content changes you might need to think about this:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2023/devops-pipeline-yaml</id>
		<title>Pay attention to the subtle details in your Devops pipeline YAML</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2023/devops-pipeline-yaml" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;Computers. Very useful when they work, but wildly frustrating when they don't. Recently I had one of those moments of frustration (well, two days actually) with Azure Devops and its YAML-based build pipelines. The root cause here seems like one of those things that could well bite others, so here's what happened to me...&lt;/p&gt;</content>
		<summary>&lt;p&gt;Computers. Very useful when they work, but wildly frustrating when they don't. Recently I had one of those moments of frustration (well, two days actually) with Azure Devops and its YAML-based build pipelines. The root cause here seems like one of those things that could well bite others, so here's what happened to me...&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2023/explore-job-container-filesystem</id>
		<title>A quick trick for exploring job images</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2023/explore-job-container-filesystem" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;Most of the time when I want to explore the filesystem of a Sitecore container, it's pretty easy. I can use Visual Studio's container browser. But that only works when a container is running - and if it's based on a job image this may be a very brief window - too brief to find and explore the file in question. So what can I do? &lt;/p&gt;</content>
		<summary>&lt;p&gt;Most of the time when I want to explore the filesystem of a Sitecore container, it's pretty easy. I can use Visual Studio's container browser. But that only works when a container is running - and if it's based on a job image this may be a very brief window - too brief to find and explore the file in question. So what can I do? &lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2022/revisit-extract-solr-query-sitecore</id>
		<title>Revisiting extracting the raw Solr query</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2022/revisit-extract-solr-query-sitecore" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>0001-01-01T00:00:00Z</updated>
		<content>&lt;p&gt;A while back &lt;a href="https://blog.jermdavis.dev/posts/2021/peeking-into-search-queries" target="_blank" rel="noopener"&gt;I wrote a post about how you could extract the raw Solr query from Sitecore's ContentSearch APIs&lt;/a&gt;. Usually the queries hid behind LINQ operations, but there are times where having the raw text can be helpful - sometimes Sitecore's API doesn't support the operations you need. That work was done under Sitecore v10.0, but having tried to repeat it under v10.2, I discover it no longer works. There have been some changes under the surface of ContentSearch which require a different approach. So if you need to do this under v10.2, here's how:&lt;/p&gt;</content>
		<summary>&lt;p&gt;A while back &lt;a href="https://blog.jermdavis.dev/posts/2021/peeking-into-search-queries" target="_blank" rel="noopener"&gt;I wrote a post about how you could extract the raw Solr query from Sitecore's ContentSearch APIs&lt;/a&gt;. Usually the queries hid behind LINQ operations, but there are times where having the raw text can be helpful - sometimes Sitecore's API doesn't support the operations you need. That work was done under Sitecore v10.0, but having tried to repeat it under v10.2, I discover it no longer works. There have been some changes under the surface of ContentSearch which require a different approach. So if you need to do this under v10.2, here's how:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2022/fix-broken-pipe-docker-engine-windows</id>
		<title>Docker Desktop v4.14/v4.15/v4.16 breaks Windows Containers?</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2022/fix-broken-pipe-docker-engine-windows" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>2023-02-28T00:00:00Z</updated>
		<content>&lt;p&gt;The other day my copy of Docker Desktop on two different work laptops prompted me to update. And neither would work properly after the update completed. In case this issue is affecting others, here's the saga of what I saw and two ways it can be fixed:&lt;/p&gt;</content>
		<summary>&lt;p&gt;The other day my copy of Docker Desktop on two different work laptops prompted me to update. And neither would work properly after the update completed. In case this issue is affecting others, here's the saga of what I saw and two ways it can be fixed:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://blog.jermdavis.dev/posts/2022/sitecore-10-3-webhooks-integration</id>
		<title>Webhooks in Sitecore 10.3</title>
		<author>
			<name>Jeremy Davis</name>
		</author>
		<link href="https://blog.jermdavis.dev/posts/2022/sitecore-10-3-webhooks-integration" />
		<link rel="enclosure" type="image" href="https://blog.jermdavis.dev/" />
		<updated>2022-12-06T00:00:00Z</updated>
		<content>&lt;p&gt;After a bit more of a pause than most attendees of &lt;a href="https://blog.jermdavis.dev/posts/2022/symposium-2022#your-on-prem-paas-dxp-gets-some-love-too" target="_blank" rel="noopener"&gt;Symposium&lt;/a&gt; this year were expecting, &lt;a href="https://dev.sitecore.net/Downloads/Sitecore_Experience_Platform/103/Sitecore_Experience_Platform_103.aspx" target="_blank" rel="noopener"&gt;Sitecore 10.3 is finally out in the wild now&lt;/a&gt;. And (to me at least) one of the most interesting changes is that the server-side event model for the CMS has been extended with Webhooks. What does that mean, and how can you make use of them? Well since I was lucky enough to get my hands on the "MVP Preview" of this release a couple of weeks back, I've had a chance to do some digging. Read on to find out...&lt;/p&gt;</content>
		<summary>&lt;p&gt;After a bit more of a pause than most attendees of &lt;a href="https://blog.jermdavis.dev/posts/2022/symposium-2022#your-on-prem-paas-dxp-gets-some-love-too" target="_blank" rel="noopener"&gt;Symposium&lt;/a&gt; this year were expecting, &lt;a href="https://dev.sitecore.net/Downloads/Sitecore_Experience_Platform/103/Sitecore_Experience_Platform_103.aspx" target="_blank" rel="noopener"&gt;Sitecore 10.3 is finally out in the wild now&lt;/a&gt;. And (to me at least) one of the most interesting changes is that the server-side event model for the CMS has been extended with Webhooks. What does that mean, and how can you make use of them? Well since I was lucky enough to get my hands on the "MVP Preview" of this release a couple of weeks back, I've had a chance to do some digging. Read on to find out...&lt;/p&gt;</summary>
	</entry>
</feed>